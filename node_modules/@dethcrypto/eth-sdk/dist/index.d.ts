import type { AbiSource, AddressInput as Address, EthSdkConfigInput as EthSdkConfig, EthSdkContractsInput as EthSdkContracts, NestedAddressesInput as NestedAddresses, RpcURLs, UserEtherscanURLsInput as EtherscanURLs } from './config';
export type { AbiSource, Address, EtherscanURLs, EthSdkConfig, EthSdkContracts, NestedAddresses, RpcURLs };
export declare const defineConfig: (config: EthSdkConfig) => {
    outputPath?: string | undefined;
    etherscanKey?: string | undefined;
    etherscanKeys?: import("./abi-management/etherscan/explorerEndpoints").UserEtherscanKeys | undefined;
    etherscanURLs?: EtherscanURLs | undefined;
    rpc?: RpcURLs | undefined;
    noFollowProxies?: boolean | undefined;
    abiSource?: "etherscan" | "sourcify" | undefined;
    networkIds?: import("./config").NetworkIds | undefined;
    typechainFlags?: {
        tsNocheck?: boolean | undefined;
        discriminateTypes: boolean;
        alwaysGenerateOverloads: boolean;
    } | undefined;
    contracts: EthSdkContracts;
};
