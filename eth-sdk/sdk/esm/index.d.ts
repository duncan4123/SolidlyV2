import { providers, Signer } from 'ethers';
import * as types from './types';
export declare function getContract(address: string, abi: object, defaultSignerOrProvider: Signer | providers.Provider): any;
export type MainnetSdk = ReturnType<typeof getMainnetSdk>;
export declare function getMainnetSdk(defaultSignerOrProvider: Signer | providers.Provider): {
    dai: types.mainnet.Dai;
    SolidlyLens: types.mainnet.SolidlyLens;
    SolidlyLensInterface: types.mainnet.SolidlyLensInterface;
    fake1: types.mainnet.Fake1;
    BaseV2TokenInterface: types.mainnet.BaseV2TokenInterface;
    VeV2Interface: types.mainnet.VeV2Interface;
    BaseV2Factory: types.mainnet.BaseV2Factory;
    BaseV2PairFactoryInterface: types.mainnet.BaseV2PairFactoryInterface;
    BaseV2Pair: types.mainnet.BaseV2Pair;
    BaseV2PairInterface: types.mainnet.BaseV2PairInterface;
    sdafasdf: types.mainnet.Sdafasdf;
    BaseV2FeesFactoryInterface: types.mainnet.BaseV2FeesFactoryInterface;
    BaseV2BribeFactoryInterface: types.mainnet.BaseV2BribeFactoryInterface;
    BribeV2Interface: types.mainnet.BribeV2Interface;
    BaseV2GaugeFactory: types.mainnet.BaseV2GaugeFactory;
    BaseV2GaugeFactoryInterface: types.mainnet.BaseV2GaugeFactoryInterface;
    GaugeV2: types.mainnet.GaugeV2;
    GaugeV2Interface: types.mainnet.GaugeV2Interface;
    BaseV2FeeDistFactoryInterface: types.mainnet.BaseV2FeeDistFactoryInterface;
    FeeDistV2Interface: types.mainnet.FeeDistV2Interface;
    BaseV2VoterInterface: types.mainnet.BaseV2VoterInterface;
    BaseV2GeneralFeesInterface: types.mainnet.BaseV2GeneralFeesInterface;
    BaseV2Router01: types.mainnet.BaseV2Router01;
    BaseV2Router01Interface: types.mainnet.BaseV2Router01Interface;
    solidly_library: types.mainnet.Solidly_library;
    SolidlyLibraryInterface: types.mainnet.SolidlyLibraryInterface;
    ve_distV2: types.mainnet.Ve_distV2;
    VeDistV2Interface: types.mainnet.VeDistV2Interface;
    BaseV2Minter: types.mainnet.BaseV2Minter;
    BaseV2MinterInterface: types.mainnet.BaseV2MinterInterface;
    MerkleDistributorVeSolid: types.mainnet.MerkleDistributorVeSolid;
    MerkleDistributor: types.mainnet.MerkleDistributor;
};
